name: Android build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - '.github/**'
      - '*.md'
  pull_request:
  workflow_dispatch:

jobs:

  linuxXandroid:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential mesa-common-dev libx11-dev libxrandr-dev libgl1-mesa-dev libglu1-mesa-dev libfreetype6-dev libopenal-dev libsndfile1-dev libudev-dev vulkan-tools libvulkan-dev vulkan-validationlayers-dev spirv-tools
        wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip android-ndk-r25c-linux.zip
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip   
        unzip commandlinetools-linux-9477386_latest.zip
        export ANDROID_SDK_ROOT=~/
        mv cmdline-tools latest
        mkdir cmdline-tools
        mv latest cmdline-tools
        yes | ./cmdline-tools/latest/bin/sdkmanager --licenses
        ./cmdline-tools/latest/bin/sdkmanager --channel=3 emulator
        ./cmdline-tools/latest/bin/sdkmanager --install "system-images;android-34;google_apis;x86_64"
        ./cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34"
        echo no | ./cmdline-tools/latest/bin/avdmanager create avd --name android34 --package "system-images;android-34;google_apis;x86_64"

    - name: get hop
      run: ./getLibs.sh

    - name: get keystore
      run: |
        export GPG_TTY=$(tty)  
        cd android
        echo "${{ secrets.KEYSTORE }}" > Stellar.jks.asc
        gpg --pinentry-mode=loopback -d --passphrase "${{ secrets.PASS }}" Stellar.jks.asc > Stellar.jks
        rm Stellar.prop
        echo "storePassword=${{ secrets.PASS }}" > Stellar.prop
        echo "keyPassword=${{ secrets.PASS }}" >> Stellar.prop
        echo "storeFile=../Stellar.jks" >> Stellar.prop
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> Stellar.prop
        cd ..

    - name: android build
      run: |
        export JAVA_HOME=$JAVA_HOME_17_X64
        source version.sh
        sed -i "s/VERSION_NAME/$PRODUCT-$MAJOR.$MINOR.$PATCH/g" android/app/build.gradle
        cd android
        ./gradlew bundleRelease
        cd ..
        mkdir androidbuild
        cp android/app/build/outputs/bundle/release/app-release.aab androidbuild/Stellar.aab
        cp LICENSE androidbuild/
        cp LICENSES.md androidbuild/
        cp README.md androidbuild/ 
        rm android/Stellar.prop

    - name: buildArtifact
      uses: actions/upload-artifact@v4
      with:
        name: Stellar-android
        path: androidbuild